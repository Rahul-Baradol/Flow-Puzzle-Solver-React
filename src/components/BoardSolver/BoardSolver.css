.main {
    position: relative;
    display: flex;
    flex-direction: column;
    width: fit-content;
    height: fit-content;
    justify-content: space-between;
    align-items: center;
}

@media (max-height: 550px) {
    .main {
        margin-top: 1vh;
    }
}

@media (max-height: 400px) {
    .main {
        margin-top: 2vh;
    }
}

/* Puzzle Board */
.board {
    display: grid;
    align-items: center;
    justify-items: center;
    grid-gap: 1vh;
    position: relative;
    width: 60vw;
    height: 60vh;
    padding: 1.2vh 1.2vw;
    border: 2px solid #022e61;
}

.middleContent {
    display: flex;
    justify-content: center;
    flex-direction: column;
    align-items: center;
}

/* Solve */
#solve {
    position: relative;
    width: 8em;
    height: 3em;
    transition: scale 1s;    
    border: 2px solid #084daf;
    margin: 1vh 1em;
}

/* Clear */
#clear {
    position: relative;
    width: 8em;
    height: 3em;
    transition: scale 1s;
    border: 2px solid #084daf;
    margin: 1vh 1em;
}

#solve:hover {
    animation: hoverIn 1 1s ease-in-out;
    scale: 1.05;
    background-color: #02429a;
}

#clear:hover {
    animation: hoverIn 1 1s ease-in-out;
    scale: 1.05;
    background-color: #02429a;
}

@media (max-width: 330px) {
    .actionButtons {
        display: flex;
        flex-direction: column;
        align-items: center;
        width: 60vw;
   }

   #solve {
    width: 100%;
   }

   #clear {
    width: 100%;
   }
}

@keyframes hoverIn {
    0% {
        scale: 1;
    }

    100% {
        scale: 1.05;
    }
}

/* The color options */
.options {
    position: relative;
    display: flex;
    height: fit-content;
    width: fit-content;
}

.option {
    height: 0.9em;
    width: 0.9em;
    border-radius: 100%;
    margin-top: 1vh;
    margin: 1.5vh 1vw;
    transition: background-color .15s ease-in-out, border-color .15s ease-in-out;
    cursor: pointer;
}

@media (max-width: 500px) {
    .option {
        width: 0.8em;
    }

    .actionButtons {
        display: flex;
        flex-direction: column;
        align-items: center;
        width: 60vw;
   }

   #solve {
    width: 100%;
   }

   #clear {
    width: 100%;
   }
}

@media (min-width: 700px) and (min-height: 900px) {
    .option {
        width: 1.75em;
        height: 1.75em;
    }
}

@media (min-width: 900px) and (min-width: 1100px) {
    .option {
        width: 1.85em;
        height: 1.85em;
    }
}

#redLabel {
    border: 1.5px solid red;
}

#redLabel:active {
    background-color: red;
}

#redLabel:hover {
    background-color: red;
}

#yellowLabel {
    border: 2px solid yellow;
}

#yellowLabel:active {
    background-color: yellow;
}

#yellowLabel:hover {
    background-color: yellow;
}

#blueLabel {
    border: 1.5px solid blue;
}

#blueLabel:active {
    background-color: blue;
}

#blueLabel:hover {
    background-color: blue;
}

#greenLabel {
    border: 1.5px solid green;
}

#greenLabel:active {
    background-color: green;
}

#greenLabel:hover {
    background-color: green;
}

#orangeLabel {
    border: 2px solid orange;
}

#orangeLabel:active {
    background-color: orange;
}

#orangeLabel:hover {
    background-color: orange;
}

#cyanLabel {
    border: 2px solid cyan;
}

#cyanLabel:active {
    background-color: cyan;
}

#cyanLabel:hover {
    background-color: cyan;
}

#pinkLabel {
    border: 2px solid rgb(249, 157, 172);
}

#pinkLabel:active {
    background-color: rgb(249, 157, 172);
}

#pinkLabel:hover {
    background-color: rgb(249, 157, 172);
}

#lightgreenLabel {
    border: 2px solid lightgreen;
}

#lightgreenLabel:active {
    background-color: lightgreen;
}

#lightgreenLabel:hover {
    background-color: lightgreen;
}

#lightblueLabel {
    border: 2px solid lightblue;
}

#lightblueLabel:active {
    background-color: lightblue;
}

#lightblueLabel:hover {
    background-color: lightblue;
}

/* Grid size with React state */
#four {
    grid-template-rows: repeat(4, 1fr);
    grid-template-columns: repeat(4, 1fr);
}

#five {
    grid-template-rows: repeat(5, 1fr);
    grid-template-columns: repeat(5, 1fr);
}

#six {
    grid-template-rows: repeat(6, 1fr);
    grid-template-columns: repeat(6, 1fr);
}

#seven {
    grid-template-rows: repeat(7, 1fr);
    grid-template-columns: repeat(7, 1fr);
}

#eight {
    grid-template-rows: repeat(8, 1fr);
    grid-template-columns: repeat(8, 1fr);
}

#nine {
    grid-template-rows: repeat(9, 1fr);
    grid-template-columns: repeat(9, 1fr);
}